var l=Object.defineProperty;var i=(r,t)=>l(r,"name",{value:t,configurable:!0});import{r as n}from"./get-pipe-path-BHW2eJdv.mjs";import p from"node:repl";import{transform as c}from"esbuild";import{globalPreload as J,initialize as K,load as L,resolve as M}from"./esm/index.mjs";import"module";import"node:path";import"./temporary-directory-CwHp0_NW.mjs";import"node:os";import"node:worker_threads";import"./node-features-_8ZFwP_x.mjs";import"./register-14IX1W4E.mjs";import"node:module";import"./register-g_8vP_GS.mjs";import"node:url";import"get-tsconfig";import"node:fs";import"./index-BQiEz0On.mjs";import"node:crypto";import"./client-BQVF1NaW.mjs";import"node:net";import"./require-B3WKn18N.mjs";import"node:fs/promises";const f=i(r=>{const{eval:t}=r,m=i(async function(o,a,e,s){try{o=(await c(o,{sourcefile:e,loader:"ts",tsconfigRaw:{compilerOptions:{preserveValueImports:!0}},define:{require:"global.require"}})).code}catch{}return t.call(this,o,a,e,s)},"preEval");r.eval=m},"patchEval"),{start:u}=p;p.start=function(){const r=Reflect.apply(u,this,arguments);return f(r),r},n("./cjs/index.cjs");export{J as globalPreload,K as initialize,L as load,M as resolve};

var v=Object.defineProperty;var i=(t,a)=>v(t,"name",{value:a,configurable:!0});import{isMainThread as C}from"node:worker_threads";import{i as y,a as Q,e as q,m as G}from"../node-features-_8ZFwP_x.mjs";import{r as H}from"../register-14IX1W4E.mjs";import"../get-pipe-path-BHW2eJdv.mjs";import"node:module";import j from"node:path";import{fileURLToPath as N,pathToFileURL as S}from"node:url";import"get-tsconfig";import J from"node:fs";import"esbuild";import"node:crypto";import{i as X,a as B,t as K,b as z,r as V}from"../index-BQiEz0On.mjs";import{p as O}from"../client-BQVF1NaW.mjs";import{l as F,t as P,a as Y,b as L,f as M,c as D,d as $,e as Z,g as x,h as tt,j as at,k as b}from"../register-g_8vP_GS.mjs";import"../require-B3WKn18N.mjs";import{readFile as st}from"node:fs/promises";import"module";import"../temporary-directory-CwHp0_NW.mjs";import"node:os";import"node:net";const f={active:!0},rt=i(async t=>{if(!t)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);f.namespace=t.namespace,t.tsconfig!==!1&&F(t.tsconfig??process.env.TSX_TSCONFIG_PATH),t.port&&(f.port=t.port,t.port.on("message",a=>{a==="deactivate"&&(f.active=!1,t.port.postMessage({type:"deactivated"}))}))},"initialize"),et=i(()=>(F(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),u=new Map,ot=i(async t=>{if(u.has(t))return u.get(t);if(!await J.promises.access(t).then(()=>!0,()=>!1)){u.set(t,void 0);return}const e=await J.promises.readFile(t,"utf8");try{const n=JSON.parse(e);return u.set(t,n),n}catch{throw new Error(`Error parsing: ${t}`)}},"readPackageJson"),nt=i(async t=>{let a=new URL("package.json",t);for(;!a.pathname.endsWith("/node_modules/package.json");){const e=N(a),n=await ot(e);if(n)return n;const r=a;if(a=new URL("../package.json",a),a.pathname===r.pathname)break}},"findPackageJson"),ct=i(async t=>(await nt(t))?.type??"commonjs","getPackageType"),it=i(t=>{[t]=t.split("?");const a=j.extname(t);if(a===".json")return"json";if(a===".mjs"||a===".mts")return"module";if(a===".cjs"||a===".cts")return"commonjs"},"getFormatFromExtension"),mt=i(t=>{const a=it(t);if(a)return a;if(P.test(t))return ct(t)},"getFormatFromFileUrl"),g="tsx-namespace=",h=i(t=>{const a=t.indexOf(g);if(a===-1)return;const e=t[a-1];if(e!=="?"&&e!=="&")return;const n=a+g.length,r=t.indexOf("&",n);return r===-1?t.slice(n):t.slice(n,r)},"getNamespace"),k=y(Q)?"importAttributes":"importAssertions",pt=i(async(t,a,e)=>{if(!f.active)return e(t,a);const n=h(t);if(f.namespace&&f.namespace!==n)return e(t,a);if(f.port){const o=new URL(t);o.searchParams.delete("tsx-namespace"),f.port.postMessage({type:"load",url:o.toString()})}O.send&&O.send({type:"dependency",path:t}),Y.test(t)&&(a[k]||(a[k]={}),a[k].type="json");const r=await e(t,a),c=t.startsWith("file://")?N(t):t;if(r.format==="commonjs"&&y(q)&&r.responseURL?.startsWith("file:")&&!c.endsWith(".cjs")){const o=await st(new URL(t),"utf8");if(!c.endsWith(".js")||X(o)){const m=B(o,c,{tsconfigRaw:M?.(c)}),p=new URLSearchParams({filePath:c});return n&&p.set("namespace",n),r.responseURL=`data:text/javascript,${encodeURIComponent(m.code)}?${p.toString()}`,r}}if(!r.source)return r;const s=r.source.toString();if(r.format==="json"||P.test(t)){const o=await K(s,c,{tsconfigRaw:M?.(c)});return{format:"module",source:L(o)}}if(r.format==="module"){const o=z(c,s);o&&(r.source=L(o))}return r},"load"),E=i(async t=>(!t.format&&t.url.startsWith(tt)&&(t.format=await mt(t.url)),t),"resolveMissingFormat"),ft=[".js",".json",".ts",".tsx",".jsx"],_=i(async(t,a,e)=>{const[n,r]=t.split("?");let c;for(const s of ft)try{return await E(await e(n+s+(r?`?${r}`:""),a))}catch(o){if(c===void 0&&o instanceof Error){const{message:m}=o;o.message=o.message.replace(`${s}'`,"'"),o.stack=o.stack.replace(m,o.message),c=o}}throw c},"tryExtensions"),A=i(async(t,a,e)=>{const n=$.test(t),r=n?"index":"/index",[c,s]=t.split("?");try{return await _(c+r+(s?`?${s}`:""),a,e)}catch(o){if(!n)try{return await _(t,a,e)}catch{}const m=o,{message:p}=m;throw m.message=m.message.replace(`${r.replace("/",j.sep)}'`,"'"),m.stack=m.stack.replace(p,m.message),m}},"tryDirectory"),w=i(async(t,a,e)=>{const n=at(t);if(n)for(const r of n)try{return await E(await e(r,a))}catch(c){const{code:s}=c;if(s!=="ERR_MODULE_NOT_FOUND"&&s!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw c}},"tryTsPaths"),I=i(async(t,a,e,n)=>{if(!f.active)return e(t,a);const r=a.parentURL&&h(a.parentURL),c=D(t);if(c){let s=h(t);if(r&&!s&&(s=r,t+=`${t.includes("?")?"&":"?"}${g}${r}`),f.namespace&&f.namespace!==s)return e(t,a);if($.test(t))return await A(t,a,e)}else if(b&&!a.parentURL?.includes("/node_modules/")){const s=b(t);for(const o of s)try{return await I(S(o).toString(),a,e)}catch{}}if((t.startsWith("#")||!Z.test(t))&&(P.test(a.parentURL)||x)){const s=await w(t,a,e);if(s)return s}try{const s=await E(await e(t,a));if(D(s.url)){const o=h(s.url);r&&!o&&(s.url+=`${s.url.includes("?")?"&":"?"}${g}${r}`)}return s}catch(s){if(s instanceof Error&&!n){const o=s,{code:m}=o;if(m==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await A(t,a,e)}catch(p){if(p.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw p}if(m==="ERR_MODULE_NOT_FOUND"){if(o.url){const p=await w(o.url,a,e);if(p)return p}else{const p=s.message.match(/^Cannot find module '([^']+)'/);if(p){const[,l]=p,d=await w(l,a,e);if(d)return d}const T=s.message.match(/^Cannot find package '([^']+)'/);if(T){const[,l]=T,d=S(l);d.pathname.endsWith("/package.json")||(d.pathname+="/package.json");const R=await V(d);if(R?.main){const W=new URL(R.main,d),U=await w(W.toString(),a,e);if(U)return U}}}if(c)try{return await _(t,a,e)}catch{}}}throw s}},"resolve");y(G)&&C&&H();export{et as globalPreload,rt as initialize,pt as load,I as resolve};
